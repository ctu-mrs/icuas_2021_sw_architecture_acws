name: safety
root: ./
startup_window: load_trajectory
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_FILE=./custom_configs/world.yaml
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_file:='$(find aerialcore_simulation)/worlds/aerial_core_autospawn.world' gui:=true
  - status:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav3; waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 2 3 $UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-mobius-camera-front --pos_file `pwd`/pos.csv"
  - control:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general core.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_uav_general core.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_NAME=uav3; waitForOdometry; roslaunch mrs_uav_general core.launch config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - waitForOffboard; sleep 26; rosservice call /gazebo/dynamic_model/jeff_electrician/activate 1
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav3; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: tiled
      panes: # #{ uav1
        - 'export UAV_NAME=uav1;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav2
        - 'export UAV_NAME=uav2;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav3
        - 'export UAV_NAME=uav3;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
  - load_trajectory:
      layout: even-vertical
      panes:
        - waitForOffboard; roslaunch trajectory_loader load.launch path:=`pwd` config:=./custom_configs/trajectory_loader.yaml
  - tf_connector:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_odometry tf_connector.launch custom_config:=./custom_configs/tf_connector.yaml
  - gazebo_camera_follow:
      layout: tiled
      panes:
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
  - rviz:
      layout: tiled
      panes:
        - waitForControl; rosrun rviz rviz -d rviz.rviz
        - waitForControl; export UAV_NAME=uav1; roslaunch mrs_rviz_plugins load_robot.launch
        - waitForControl; export UAV_NAME=uav2; roslaunch mrs_rviz_plugins load_robot.launch
